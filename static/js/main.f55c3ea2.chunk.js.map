{"version":3,"sources":["util.js","InfoBox.js","Table.js","App.js","index.js"],"names":["sortData","data","sort","a","b","cases","formatNumbers","number","toString","replace","InfoBox","classname","title","total","className","Table","countries","map","key","country","src","countryInfo","flag","width","alt","todayCases","active","todayRecovered","recovered","deaths","population","App","useState","setCountries","setCountry","setCountryInfo","tableData","setTableData","useEffect","fetch","then","response","json","name","value","iso2","sortedData","getCountriesData","onCountryChange","event","countryCode","target","url","onChange","items","todayDeaths","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAAaA,EAAW,SAASC,GAG7B,OAFgB,YAAOA,GAELC,MAAK,SAACC,EAAGC,GAAJ,OAAWA,EAAEC,MAAQF,EAAEE,UAGrCC,EAAgB,SAACC,GAAD,OAAaA,GAAU,EAAI,UAAGA,GAASC,WAAWC,QAAQ,wBAAyB,KAAO,aCSxGC,MAZf,YAAoD,IAAlCC,EAAiC,EAAjCA,UAAWC,EAAsB,EAAtBA,MAAOP,EAAe,EAAfA,MAAOQ,EAAQ,EAARA,MACvC,OACI,yBAAKC,UAAU,YACX,yBAAKA,UAAWH,GACZ,2BAAIC,GACJ,gCAAMN,EAAcD,IACpB,qCAAWC,EAAcO,OC2B1BE,MAjCf,YAA6B,IAAbC,EAAY,EAAZA,UACZ,OACI,yBAAKF,UAAU,oBACX,2BAAOA,UAAU,uBACb,+BACI,4BACI,oCACA,uCACA,wBAAIA,UAAU,cAAd,eACA,wBAAIA,UAAU,cAAd,gBACA,wBAAIA,UAAU,cAAd,mBACA,wBAAIA,UAAU,cAAd,gBACA,wBAAIA,UAAU,cAAd,gBAGR,+BACKE,EAAUC,KAAI,SAAChB,GAAD,OACX,wBAAIiB,IAAKjB,EAAKkB,SACV,4BAAI,yBAAKC,IAAKnB,EAAKoB,YAAYC,KAAMC,MAAM,OAAOC,IAAI,MACtD,4BAAKvB,EAAKkB,SACV,wBAAIL,UAAU,cAAa,2BAAOA,UAAU,YAAjB,IAA8BR,EAAcL,EAAKwB,aAA5E,IAAiG,6BAAjG,IAAwGnB,EAAcL,EAAKI,QAC3H,wBAAIS,UAAU,cAAcR,EAAcL,EAAKyB,SAC/C,wBAAIZ,UAAU,cAAa,2BAAOA,UAAU,cAAjB,IAAgCR,EAAcL,EAAK0B,iBAA9E,IAAuG,6BAAvG,IAA8GrB,EAAcL,EAAK2B,YACjI,wBAAId,UAAU,cAAcR,EAAcL,EAAK4B,SAC/C,wBAAIf,UAAU,cAAcR,EAAcL,EAAK6B,qB,MC+D5DC,MApFf,WAAgB,IAAD,EACqBC,mBAAS,IAD9B,mBACNhB,EADM,KACKiB,EADL,OAEiBD,mBAAS,CAAC,cAF3B,mBAEGE,GAFH,aAGyBF,mBAAS,IAHlC,mBAGNX,EAHM,KAGOc,EAHP,OAIqBH,mBAAS,IAJ9B,mBAINI,EAJM,KAIKC,EAJL,KAMbC,qBAAU,WACRC,MAAM,sCACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAvC,GACJkC,EAAelC,QAEjB,IAEFqC,qBAAU,YACc,uCAAG,sBAAAnC,EAAA,sDACvBoC,MAAM,4CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAvC,GACJ,IAAMe,EAAYf,EAAKgB,KAAI,SAACE,GAAD,MACzB,CACEwB,KAAMxB,EAAQA,QACdyB,MAAOzB,EAAQE,YAAYwB,SAGzBC,EAAa9C,EAASC,GAC5BgC,EAAajB,GACbqB,EAAaS,MAZQ,2CAAH,qDAetBC,KACA,IAEF,IAAMC,EAAe,uCAAG,WAAOC,GAAP,iBAAA9C,EAAA,sDAChB+C,EAAcD,EAAME,OAAOP,MAE3BQ,EAAuB,cAAhBF,EAA+B,qCAAhC,mDAAmHA,GAE/HX,MAAMa,GACLZ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAvC,GACJiC,EAAWgB,GACXf,EAAelC,MATK,2CAAH,sDAarB,OACE,yBAAKa,UAAU,QACb,yBAAKA,UAAU,eACb,yDAEF,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,cACb,gDAAqB,2BAAOA,UAAU,cAAjB,2BACrB,8BACE,4BAAQA,UAAU,eAAeuC,SAAUL,GACzC,4BAAQJ,MAAM,aAAd,aACC5B,EAAUC,KAAI,SAACqC,GAAD,OAAS,4BAAQV,MAAOU,EAAMV,OAAQU,EAAMX,YAKjE,yBAAK7B,UAAU,aACb,yBAAKA,UAAU,OACb,kBAAC,EAAD,CAASH,UAAU,mBAAmBC,MAAM,oBAAoBP,MAAOgB,EAAYI,WAAYZ,MAAOQ,EAAYhB,QAClH,kBAAC,EAAD,CAASM,UAAU,uBAAuBC,MAAM,YAAYP,MAAOgB,EAAYM,eAAgBd,MAAOQ,EAAYO,YAClH,kBAAC,EAAD,CAASjB,UAAU,oBAAoBC,MAAM,SAASP,MAAOgB,EAAYkC,YAAa1C,MAAOQ,EAAYQ,WAI7G,6BAAM,6BAAM,6BAEZ,yBAAKf,UAAU,YACb,6DAAkC,2BAAOA,UAAU,cAAjB,wBAClC,6BACA,kBAAC,EAAD,CAAOE,UAAWoB,SC9E9BoB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.f55c3ea2.chunk.js","sourcesContent":["export const sortData = function(data){\r\n    const sortedData = [...data];\r\n\r\n    return sortedData.sort((a, b) => (b.cases - a.cases));\r\n}\r\n\r\nexport const formatNumbers = (number) => (number >= 0)? `${number}`.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : \"Loading..\" ;","import React from 'react';\r\nimport {formatNumbers} from './util';\r\n\r\nfunction InfoBox({classname, title, cases, total}) {\r\n    return (\r\n        <div className=\"col-sm-4\">\r\n            <div className={classname}>\r\n                <p>{title}</p>\r\n                <h3>+{formatNumbers(cases)}</h3>\r\n                <p>Total: {formatNumbers(total)}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InfoBox\r\n","import React from 'react'\r\nimport {formatNumbers} from './util';\r\n\r\nfunction Table({countries}) {    \r\n    return (\r\n        <div className=\"table-responsive\">\r\n            <table className=\"table table-striped\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Flat</th>\r\n                        <th>Country</th>\r\n                        <th className=\"text-right\">Total Cases</th>\r\n                        <th className=\"text-right\">Active Cases</th>\r\n                        <th className=\"text-right\">Total Recovered</th>\r\n                        <th className=\"text-right\">Total Deaths</th>\r\n                        <th className=\"text-right\">Population</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {countries.map((data) => (\r\n                        <tr key={data.country}>\r\n                            <td><img src={data.countryInfo.flag} width=\"30px\" alt=\"\"/></td>\r\n                            <td>{data.country}</td>\r\n                            <td className=\"text-right\"><small className=\"text-red\">+{formatNumbers(data.todayCases)}</small> <br/> {formatNumbers(data.cases)}</td>\r\n                            <td className=\"text-right\">{formatNumbers(data.active)}</td>\r\n                            <td className=\"text-right\"><small className=\"text-green\">+{formatNumbers(data.todayRecovered)}</small> <br/> {formatNumbers(data.recovered)}</td>\r\n                            <td className=\"text-right\">{formatNumbers(data.deaths)}</td>\r\n                            <td className=\"text-right\">{formatNumbers(data.population)}</td>\r\n                        </tr>\r\n                    ))}      \r\n                </tbody>              \r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Table\r\n","import React, {useEffect, useState} from 'react';\nimport InfoBox from './InfoBox';\nimport Table from './Table';\nimport {sortData} from './util';\nimport './App.css';\n\nfunction App() {\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState([\"Worldwide\"]);\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n\n  useEffect(() => {\n    fetch('https://disease.sh/v3/covid-19/all')\n    .then(response => response.json())\n    .then(data => {\n      setCountryInfo(data);\n    })\n  },[]);\n\n  useEffect(()=> {\n    const getCountriesData = async () => {\n      fetch('https://disease.sh/v3/covid-19/countries')\n      .then(response => response.json())\n      .then(data => {\n        const countries = data.map((country)=>(\n          {\n            name: country.country,\n            value: country.countryInfo.iso2\n          }\n        ));\n        const sortedData = sortData(data);\n        setCountries(countries);\n        setTableData(sortedData);\n      });\n    }\n    getCountriesData();\n  },[]);\n\n  const onCountryChange = async (event) => {\n    const countryCode = event.target.value;\n\n    const url = (countryCode === \"Worldwide\") ? 'https://disease.sh/v3/covid-19/all' : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n\n    fetch(url)\n    .then(response => response.json())\n    .then(data => {\n      setCountry(countryCode);\n      setCountryInfo(data);\n    })\n  }\n\n  return (\n    <div className=\"body\">\n      <div className=\"page-header\">\n        <h1>Worldwide Covid-19 Stats</h1>\n      </div>\n      <div className=\"container\">\n        <div className=\"app\">\n          <div className=\"app_header\">\n            <h3>Covid 19 Tracker <small className=\"text-muted\">(Updated every 10mins)</small></h3>\n            <form>\n              <select className=\"form-control\" onChange={onCountryChange}>\n                <option value=\"Worldwide\">Worldwide</option>\n                {countries.map((items)=><option value={items.value}>{items.name}</option>)}\n              </select>\n            </form>\n          </div>\n\n          <div className=\"app_stats\">\n            <div className=\"row\">\n              <InfoBox classname=\"card total-cases\" title=\"Coronavirus Cases\" cases={countryInfo.todayCases} total={countryInfo.cases}/>\n              <InfoBox classname=\"card total-recovered\" title=\"Recovered\" cases={countryInfo.todayRecovered} total={countryInfo.recovered}/>\n              <InfoBox classname=\"card total-deaths\" title=\"Deaths\" cases={countryInfo.todayDeaths} total={countryInfo.deaths}/>\n            </div>\n          </div>\n\n          <br /><hr /><br />\n\n          <div className=\"app_data\">\n            <h3>Full list of Cases by Country <small className=\"text-muted\">(Updated every 1hr)</small></h3>\n            <br/>\n            <Table countries={tableData} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}